{
	/*
		// Place your snippets for JavaScript here. Each snippet is defined under a snippet name and has a prefix, body and
		// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
		// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the
		// same ids are connected.
		// Example:
		"Print to console": {
			"prefix": "log",
			"body": [
				"console.log('$1');",
				"$2"
			],
			"description": "Log output to console"
		}
	*/

	"Print string console": {
		"prefix": "cl",
		"body": [
			"console.log('$1');"
		],
		"description": "Snippet for a console.log with string"
	},

	"Print object to console": {
		"prefix": "cl2",
		"body": [
			"console.log({\n\t$1\n});"
		],
		"description": "Snippet for a console.log to print objects"
	},

	"Expand then callback": {
		"prefix": "t>",
		"body": [
			".then(($1) => {\n\t$2\n})"
		]
	},

	"then": {
		"prefix": "then",
		"body": [
			".then(($1) => {",
			"\t$2",
			"})"
		]
	},

	"catch": {
		"prefix": "catch",
		"body": [
			".catch((err$1) => {",
			"\t$2",
			"})"
		]
	},

	"describe": {
		"prefix": "describe",
		"body": [
			"describe('', () => {",
			"	before(() => {",
			"",
			"	});",
			"",
			"	beforeEach(() => {",
			"",
			"	});",
			"",
			"	afterEach(() => {",
			"",
			"	});",
			"",
			"	after(() => {",
			"",
			"	});",
			"",
			"	it('', () => {",
			"	});",
			"});"
		]
	}
}